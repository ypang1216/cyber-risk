---
import Layout from '../layouts/Layout.astro';
import ParticlesBackground from '../components/svelte/ParticlesBackground.svelte';
---

<Layout title="Test tsParticles">
  <div class="text-center my-8">
    <h1 class="text-3xl font-bold">Testing tsParticles</h1>
    <p class="mt-4 text-gray-600">This page tests if tsParticles is working properly</p>
  </div>
  
  <div class="particles-container">
    <ParticlesBackground id="particles-demo" isAbsolute={false} client:only="svelte" />
  </div>

  <div class="mt-6 text-center">
    <p>If you don't see particles above, check the browser console for errors.</p>
    <button id="debug-btn" class="mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
      Create Test Canvas
    </button>
  </div>
</Layout>

<style>
  .particles-container {
    position: relative;
    width: 100%;
    height: 400px;
    background-color: #f1f5f9;
    border: 2px solid #94a3b8;
    border-radius: 8px;
    margin-bottom: 2rem;
  }
</style>

<script>
  console.log("Test particles page loaded");
  
  // Check if container exists after a delay
  setTimeout(() => {
    const container = document.getElementById('particles-demo');
    console.log("Container element:", container);
  }, 1000);

  // Add debugging button functionality
  document.addEventListener('DOMContentLoaded', () => {
    const debugBtn = document.getElementById('debug-btn');
    if (debugBtn) {
      debugBtn.addEventListener('click', () => {
        console.log("Debug button clicked");
        
        const container = document.getElementById('particles-demo');
        if (!container) {
          console.error("Container not found!");
          return;
        }
        
        // Create a test canvas to verify canvas can be created in the container
        const testCanvas = document.createElement('canvas');
        testCanvas.width = 400;
        testCanvas.height = 300;
        testCanvas.style.display = 'block';
        testCanvas.style.width = '100%';
        testCanvas.style.height = '100%';
        container.appendChild(testCanvas);
        
        // Draw something on the canvas
        const ctx = testCanvas.getContext('2d');
        if (ctx) {
          // Draw background
          ctx.fillStyle = '#e0f2fe';
          ctx.fillRect(0, 0, testCanvas.width, testCanvas.height);
          
          // Draw a pattern of circles
          for (let x = 0; x < 10; x++) {
            for (let y = 0; y < 8; y++) {
              ctx.beginPath();
              ctx.arc(
                40 + x * 40, 
                40 + y * 40, 
                10, 
                0, 
                Math.PI * 2
              );
              ctx.fillStyle = x % 2 === y % 2 ? '#0284c7' : '#7dd3fc';
              ctx.fill();
            }
          }
          
          // Draw text
          ctx.font = 'bold 20px Arial';
          ctx.fillStyle = '#0c4a6e';
          ctx.textAlign = 'center';
          ctx.fillText(
            'Test Canvas Working!', 
            testCanvas.width / 2, 
            testCanvas.height / 2
          );
        }
        
        console.log("Test canvas created and drawn");
      });
    }
  });
</script>